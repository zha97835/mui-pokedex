{"version":3,"sources":["constants.js","PokemonSnapCard.js","Pokedex.js","PokemonDetailCard.js","Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","cardRoot","maxWidth","cardMedia","margin","cardContent","textAlign","cardAction","justifyContent","alignItems","PokemonSnapCard","props","id","history","sprite","classes","Card","className","CardActionArea","CardMedia","component","alt","title","image","style","width","height","CardContent","Typography","CardActions","Button","variant","size","color","onClick","push","pokedexContainer","paddingTop","paddingLeft","paddingRight","searchContainer","display","backgroundColor","fade","palette","common","white","marginTop","marginBottom","searchIcon","alignSelf","searchInput","Pokedex","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","AppBar","position","Toolbar","Grid","container","justify","TextField","onChange","e","target","value","label","spacing","Object","keys","map","pokemonId","includes","item","xs","sm","md","lg","key","getPokemonCard","CircularProgress","root","blue","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","purple","cardHeader","PokemonDetailCard","species","weight","types","fullImageUrl","React","expanded","setExpanded","CardHeader","Avatar","aria-label","src","subheader","action","IconButton","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","Link","href","url","typeInfo","type","Pokemon","match","params","undefined","setPokemon","catch","error","sprites","front_default","generatePokemonJSX","App","exact","path","render","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.24ff1076.chunk.js","sourcesContent":["export const toFirstCharUppercase = name => \r\n    name.charAt(0).toUpperCase() + name.slice(1);\r\nexport default toFirstCharUppercase","import React from 'react';\r\nimport {Card, Typography} from '@material-ui/core';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport toFirstCharUppercase from './constants';\r\n// import Purple from '@material-ui/core/colors/purple';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardRoot:{\r\n        maxWidth: '300',\r\n    },\r\n    cardMedia: {\r\n      margin: \"auto\",\r\n    },\r\n    cardContent: {\r\n        textAlign: \"center\"\r\n    },\r\n    cardAction: {\r\n        justifyContent:'center',\r\n        alignItems: \"center\"\r\n    }\r\n  }));\r\n\r\n  const PokemonSnapCard = (props) => {\r\n    const {id, name, history, sprite} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        // <Card className={classes.cardRoot} onClick={() => history.push(`/${id}`)}>\r\n        <Card className={classes.cardRoot}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={name}\r\n                    title={name}                    \r\n                    className={classes.cardMedia}\r\n                    image={sprite}\r\n                    style={{ width: \"130px\", height: \"130px\" }}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => history.push(`/${id}`)}>\r\n                    Show Details\r\n                </Button>\r\n            </CardActions>\r\n        </Card>    \r\n    )\r\n}\r\n\r\nexport default PokemonSnapCard\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Toolbar,\r\n  AppBar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport PokemonSnapCard from './PokemonSnapCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokedexContainer: {\r\n    paddingTop: \"8px\",\r\n    paddingLeft: \"8px\",\r\n    paddingRight: \"8px\",\r\n  },\r\n  cardMedia: {\r\n    margin: \"auto\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n  },\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"360px\",\r\n    margin: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon?limit=1000`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        const { results } = data;\r\n        const newPokemonData = {};\r\n        results.forEach((pokemon, index) => {\r\n          newPokemonData[index + 1] = {\r\n            id: index + 1,\r\n            name: pokemon.name,\r\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              index + 1\r\n            }.png`,\r\n          };\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      });\r\n  }, []);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n    return (\r\n      <Grid item xs={6} sm={4} md={3} lg={2} key={pokemonId}>\r\n        <PokemonSnapCard id={id} name={name} sprite={sprite} history={history}/>       \r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Grid container className={classes.searchContainer} justify={'center'}>            \r\n              <SearchIcon className={classes.searchIcon} />\r\n              <TextField\r\n                className={classes.searchInput}\r\n                onChange={handleSearchChange}\r\n                label=\"Find Pokemon by name (按姓名查找宝可漫)\"\r\n                variant=\"standard\"\r\n              />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {pokemonData ? (\r\n        <Grid container spacing={1} className={classes.pokedexContainer}>\r\n          {Object.keys(pokemonData).map(\r\n            (pokemonId) =>\r\n              pokemonData[pokemonId].name.includes(filter) &&\r\n              getPokemonCard(pokemonId)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from 'react';\r\nimport {Card, Link, Typography} from '@material-ui/core';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport toFirstCharUppercase from './constants';\r\n// import Purple from '@material-ui/core/colors/purple';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { red, blue, purple } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport clsx from 'clsx';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    //   maxWidth: 345,\r\n    },\r\n    cardMedia: {\r\n      height: 0,\r\n      paddingTop: '5px',\r\n    },\r\n    cardContent: {\r\n        textAlign: \"center\",\r\n        // backgroundColor: purple[100],\r\n    },\r\n    cardAction: {\r\n        // justifyContent:'center',\r\n        // alignItems: \"center\",\r\n        backgroundColor: blue[500],\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: purple[500],\r\n      },\r\n    cardHeader: {\r\n        backgroundColor: blue[500],\r\n    },\r\n}));  \r\n\r\n  const PokemonDetailCard = (props) => {\r\n    const {pokemon, history} = props;\r\n    const { name, id, species, height, weight, types, sprite} = pokemon;\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  \r\n    return (\r\n      <Card className={classes.root}>\r\n        <CardHeader className={classes.cardHeader}\r\n          avatar={\r\n            <Avatar aria-label={name} className={classes.avatar}>\r\n                <img src={fullImageUrl} style={{ width: \"30px\", height: \"30px\" }}/>\r\n            </Avatar>\r\n          }\r\n          title={toFirstCharUppercase(name)}\r\n          subheader='Click the back arrow or the image to go back'\r\n          action={\r\n            <IconButton aria-label=\"Go Back\" onClick={() => history.push(`/mui-pokedex`)}>\r\n              <ArrowBackIosIcon />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardActionArea>\r\n            <CardMedia className={classes.cardMedia} onClick={() => history.push(`/mui-pokedex`)}\r\n                component=\"img\"\r\n                alt={name}\r\n                title={name}                    \r\n                className={classes.cardMedia}\r\n                src={fullImageUrl}\r\n                style={{ width: \"300px\", height: \"300px\"}}\r\n            />\r\n            <CardContent className={classes.cardContent}>                      \r\n            </CardContent>\r\n        </CardActionArea>\r\n        <CardActions disableSpacing className={classes.cardAction}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Click the down arrow for more information\r\n            </Typography>  \r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n            <Typography variant=\"h5\">Pokemon Info:</Typography>\r\n            <Typography>\r\n                {\"Species: \"}\r\n                <Link href={species.url}>{species.name} </Link>\r\n            </Typography>\r\n            <Typography>Height: {height} </Typography>\r\n            <Typography>Weight: {weight} </Typography>\r\n            <Typography variant=\"h6\"> Types:</Typography>\r\n            {types.map((typeInfo) => {\r\n                const { type } = typeInfo;\r\n                const { name } = type;\r\n                return <Typography key={name}> {`${name}`}</Typography>;\r\n            })}\r\n            </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default PokemonDetailCard\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Typography, CircularProgress, Button, Card } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PokemonDetailCard from './PokemonDetailCard';\r\n\r\nconst Pokemon = (props) => {\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types, sprites} = pokemon;\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n    const { front_default } = sprites;\r\n    return (      \r\n      <PokemonDetailCard pokemon={pokemon} history={history}/>\r\n    );\r\n  };\r\n\r\n  return (\r\n    // <Card item style={{maxWidth: '345px'}}>\r\n    <Card>\r\n        {pokemon === undefined && <CircularProgress />}\r\n        {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n        {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n        {/* {pokemon !== undefined && (\r\n          <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n            back to pokedex\r\n          </Button>\r\n        )}     */}\r\n    </Card>    \r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\nimport Pokedex from './Pokedex';\nimport Pokemon from './Pokemon';\nimport { Rout, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/mui-pokedex\" render={(props) => <Pokedex {...props} />} />\n      <Route exact path=\"/:pokemonId\" render={(props) => <Pokemon {...props} />} />\n    </Switch>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n \nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}